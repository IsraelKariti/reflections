How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    since i constantly keeping versions of my code, i can compare the version with the bug to a previous version.
    diff tells me what code was changed. and it can be the lead to start debugging.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    easy access to versions history help me understand the code evolution and see what things i tend to change in a code, and what things are good as they are.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    the biggest problem is that i i will forget to commit. other than that commiting myself is the best. if the software were to do that for me it could save useless commits

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    b/c git is programming language oriented. and ussually programs are combined of muultiple files

How can you use the commands git log and git diff to view the history of files?

    git log shows me all the commits' serial codes and not the actual code. it also describes the changed made in each 
    commit so it's easy to get a bird view of the progress overall. the git diff shows me exactlly how the implementation in the description was implemented. i have to get an older version to see what is new in my current version.

How might using version control make you more confident to make changes that
could break something?

    since i know that i can always swith back to a previous and working version with the checkout command i can always try new things and switch back if a bug is introduced

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here